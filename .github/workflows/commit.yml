name: 👩‍🔧 CI

on:
  pull_request:
  workflow_call:
    outputs:
      e2e-result:
        value: ${{ jobs.testing-e2e.outputs.output1 }}
      e2e-job-result:
        value: ${{ jobs.testing-e2e.outputs.output3 }}
      unit-result:
        value: ${{ jobs.testing-unit.outputs.output1 }}

jobs:
  commitlint:
    name: 👔 Проверка коммитов
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - name: Установка commitlint
        run: |
          npm install conventional-changelog-conventionalcommits
          npm install commitlint@latest

      - name: Проверка запушенных коммитов (сообщений) через commitlint
        if: github.event_name == 'push'
        run: |
          echo "🐧 Хэши первого и последнего коммитов в пуше  ${{ github.event.before }} (не включается в проверку) и ${{ github.event.after }}"
          npx commitlint --from ${{ github.event.before }} --to HEAD --verbose

      - name: Проверка коммитов PR (сообщений) через commitlint
        if: github.event_name == 'pull_request'
        run: |
          echo "🐭 Хэши проверяемых коммитов в ПР  ${{ github.event.pull_request.base.sha }} (не включительно) и ${{ github.event.pull_request.head.sha }} "
          npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose

  testing-e2e:
    name: 🐛 Тесты e2e
    runs-on: ubuntu-latest
    outputs:
      output1: ${{steps.save-test.outputs.result-e2e}}
      output3: ${{steps.save-test.outcome}}

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: ⬇️ Установка зависимостей
        run: |
          npm ci
      - name: 🧪 Запуск e2e тестов
        id: e2e-test
        run: |
          npm run e2e-ci
      - name: 🧙‍♂️ Сохранение артефактов
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: playwright-report
          path: playwright-report
      - name: 🔗 Сохранение ссылки
        if: always()
        id: save-test
        run: |
          echo "result-e2e=${{ steps.e2e-test.outcome }}" >> $GITHUB_OUTPUT
  testing-unit:
    name: 🃏 Тесты unit
    runs-on: ubuntu-latest
    outputs:
      output1: ${{steps.save-test.outputs.result-unit}}
      # output2: ${{steps.save-test.outputs.link}}
      output3: ${{steps.unit-test.outcome}}

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: ⬇️ Установка зависимостей
        run: |
          npm ci
      - name: 🧪 Запуск unit тестов
        id: unit-test
        run: |
          npm run test-ci
      - name: 🧙‍♂️ Сохранение артефактов
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: jest-report
          path: test-report.html
      - name: 🔗 Сохранение ссылки
        if: always()
        id: save-test
        run: |
          echo "result-unit=${{ steps.unit-test.outcome }}" >> $GITHUB_OUTPUT
          echo "Workflow Run Link: ${{ github.repository }}/actions/runs/ ${{ github.run_id }}"

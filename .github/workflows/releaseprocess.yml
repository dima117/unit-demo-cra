name: Release-Process

on:
  push:
    tags:
      - "v*"

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  create_issue:
    name: Create issue
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [18.x]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Get the repo code
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Install dependencies
        run: |
          npm ci
          npx playwright install --with-deps chromium

      - name: "Tests: unit"
        id: unit_test
        run: npm run test-unit-ci > unit_test_output.txt 2>&1
        continue-on-error: true

      - name: "Tests: e2e"
        id: e2e_test
        run: npm run test-e2e-ci > e2e_test_output.txt 2>&1
        continue-on-error: true

      - name: Get unit test results
        id: unit_test_results
        run: |
          echo "UNIT_TEST_RESULT=$(cat unit_test_output.txt)" >> $GITHUB_ENV

      - name: Get e2e test results
        id: e2e_test_results
        run: |
          echo "E2E_TEST_RESULT=$(cat e2e_test_output.txt)" >> $GITHUB_ENV

      - name: Check release version from tag
        run: echo "RELEASE_VER=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Create Release Issue
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.TOKEN }}
          script: |
            const title = `Release ${process.env.RELEASE_VER}`
            let body = `Author: ${context.payload.sender.login}\n`
            body += `Date: ${new Date().toLocaleString()}\n`
            body += `Version: ${process.env.RELEASE_VER}\n\n`
            body += `Unit Test Results: \n${process.env.UNIT_TEST_RESULT}\n\n`
            body += `E2E Test Results: \n${process.env.E2E_TEST_RESULT}\n\n`      

            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['RELEASE']
            })

  deploy:
    needs: create_issue
    if: needs.create_issue.outputs.unit_test_success && needs.create_issue.outputs.e2e_test_success
    uses: ./.github/workflows/static.yml

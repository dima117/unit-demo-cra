name: Release Process

on: [push]
  # push:
  #   tags:
  #     - 'v\d+'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - run: git fetch --prune --unshallow

      - name: Get current release tag
        id: get_curent_version
        run: echo "current_tag=$(git describe --abbrev=0 --tags --match='v[0-9]*') HEAD" >> "$GITHUB_OUTPUT"

      - name: Get previous release tag
        id: get_previous_release
        if: steps.get_curent_version.outputs.current_tag != ''
        run: echo "previous_tag=$(git describe --abbrev=0 --tags --match='v[0-9]*' $(git describe --abbrev=0 --tags --match='v[0-9]*' HEAD)^)" >> "$GITHUB_OUTPUT"

      - name: First generate changelog
        id: first_generate_changelog
        if: steps.get_previous_release.outputs.previous_tag == ''
        run: |
          git log --pretty=format:"- %s [%h](https://github.com/$GITHUB_REPOSITORY/commit/%H)" --abbrev-commit $(steps.get_curent_version.outputs.current_tag) > changelog.md

      - name: Generate changelog
        id: generate_changelog
        if: steps.get_previous_release.outputs.previous_tag != ''
        run: |
          git log --pretty=format:"- %s [%h](https://github.com/$GITHUB_REPOSITORY/commit/%H)" --abbrev-commit $(steps.get_previous_release.outputs.previous_tag)...$(steps.get_curent_version.outputs.current_tag) > changelog.md

      - name: Open issue
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'open-issue'
          
      - name: Set labels
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'set-labels'
          issue-number: ${{ github.event.issue.number }}
          labels: 'RELEASE'
          
#       - name: Create release issue
#         id: create_release_issue
#         uses: peter-evans/create-issue-from-file@v4
#         with:
#           token: ${{ secrets.GITHUB_TOKEN }}
#           title: Release ${{ steps.get_curent_version.outputs.current_tag }}
#           content-filepath: changelog.md
#           labels: |
#             RELEASE

      - name: Run tests
        run: npm run test

      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build

      - name: Update release issue with deployment details
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issueNumber = "${{ steps.create_release_issue.outputs.issue-number }}";
            const deployUrl = "https://${{ github.repository_owner }}.github.io/${{ github.repository }}";
            const octokit = github.getOctokit(process.env.GITHUB_TOKEN);
            await octokit.issues.update({
              owner: github.context.repo.owner,
              repo: github.context.repo.repo,
              issue_number: issueNumber,
              body: `Deployment URL: ${deployUrl}`
            })

      - name: Close release issue
        uses: peter-evans/close-issue@v1
        with:
          issue-number: ${{ steps.create_release_issue.outputs.issue-number }}
